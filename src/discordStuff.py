import os
import configparser
from discord.ext import commands
import discord
from discord.activity import Activity, ActivityType
from discord_components import Select, Button, DiscordComponents, interaction
from discord_components.component import ButtonStyle

from src.printUtil import *
from src import discordData as dData
from src.cmdUtil import *

bot = commands.Bot(command_prefix="!")
DiscordComponents(bot)


async def getMessage(chaID, messID):
    try:
        cha = await bot.fetch_channel(chaID)
    except:
        return None

    try:
        mess = await cha.fetch_message(messID)
    except:
        return None

    return mess


async def doDeleteLastCMDMessage(thisChannelID):
    lastMessage = await getMessage(
        thisChannelID, dData.getMessID(thisChannelID))
    await lastMessage.delete()


@bot.event
async def on_ready():
    printSuggest("Discord", "Logged in as")
    print(bot.user.name)
    print(bot.user.id)
    print('------')

    botActivity = Activity(
        name="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå !+schedule ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡πá‡πÑ‡∏î‡πâ)", type=ActivityType.playing)
    await bot.change_presence(activity=botActivity)
    # TODO : Create Task
    # client.loop.create_task(cmd.botStatus(client))


async def menuCmdCommand(chan):
    return await chan.send(":clock1:**‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ö‡∏≠‡∏ó‡∏Ç‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå(‡∏´‡πâ‡∏≠‡∏á)‡πÄ‡∏£‡∏µ‡∏¢‡∏ô**:clock1:\n \\* ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ\n*‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ : ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥*",
                           components=[
                               Button(
                                   label="‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î", custom_id="reloadButton", style=ButtonStyle.blue, emoji="üîÅ"),
                               Button(
                                   label="‡∏•‡∏ö‡πÅ‡∏ä‡∏•‡πÄ‡∏ô‡∏•‡∏ô‡∏µ‡πâ(‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!!!)", custom_id="deleteButton", style=ButtonStyle.red, emoji="üí•"),
                           ]
                           )


@bot.event
async def on_guild_join(guild):
    await guild.system_channel.send("‡∏Å‡∏£‡∏≤‡∏ö‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö")


@bot.event
async def on_message(mes: discord.message.Message):

    if mes.author.id == bot.user.id:
        return

    thisChannelID = mes.channel.id

    # !+schedule
    if mes.content.strip().lower().startswith("!+schedule"):

        thisMes = await menuCmdCommand(mes.channel)

        if dData.isExistID(thisChannelID):
            try:
                await doDeleteLastCMDMessage(thisChannelID)
            except:
                pass
            dData.changeMessID(thisChannelID, thisMes.id)
        else:
            dData.createNewID(thisChannelID, thisMes.id)

    elif mes.content.strip().lower().startswith("!+hello"):
        await mes.channel.send("‡∏ß‡πà‡∏≤‡πÑ‡∏á")

    elif mes.content.strip().lower().startswith("!+admin"):
        passText = mes.content.replace("!+admin", "").strip()
        res = regisAdmin(str(thisChannelID), passText)
        print("pass:", passText)
        print(isAdmin(str(thisChannelID)))
        if res == 1:
            await mes.channel.send(
                ":computer:**‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö Adminnnnnnn**:computer:\n‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!+help` ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á")
        elif res == 2:
            await mes.channel.send(
                "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô admin ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß\n‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!+help` ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á")


@bot.event
async def on_button_click(inter: interaction.Interaction):
    thisChannelID = inter.channel_id
    await inter.respond(type=6)
    if inter.custom_id == "deleteButton":
        if dData.isExistID(thisChannelID):
            await doDeleteLastCMDMessage(thisChannelID)
            dData.removeID(thisChannelID)
            await bot.get_channel(thisChannelID).send(":boom:**‡∏•‡∏ö‡πÅ‡∏ä‡∏•‡πÄ‡∏ô‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢**:boom:\n‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á *(‡∏ã‡∏∂‡∏°...)*")
        else:
            await bot.get_channel(thisChannelID).send("‡πÄ ‡∏õ‡πá ‡∏ô ‡πÑ ‡∏õ ‡πÑ ‡∏°‡πà ‡πÑ ‡∏î‡πâ")
    elif inter.custom_id == "reloadButton":
        thisMes = await menuCmdCommand(inter.channel)
        await doDeleteLastCMDMessage(thisChannelID)
        dData.changeMessID(thisChannelID, thisMes.id)

thisToken = "???"

# ? read Config
if not os.path.exists("BigConfig.ini"):
    printError("BigConfig", "BigConfig.ini not found :(")
    exit(1)
thisConfig = configparser.ConfigParser()
thisConfig.read("BigConfig.ini")

thisToken = thisConfig["KeyToken"]["botToken"].strip()


def runBot():
    printSuggest("Discord", "Loading data...")
    try:
        dData.loadData()
    except Exception as e:
        printError("Discord", f"Fail to load data...")
        print(e)
        exit(1)

    printSuggest("Discord", "Runing bot...")
    try:
        bot.run(thisToken)
    except Exception as e:
        printError(
            "Discord", f"Wrong Token or Fucked up\nhere is token:{thisToken}")
        print(e)
        exit(1)
