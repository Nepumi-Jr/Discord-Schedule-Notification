from discord_components import Select, Button, DiscordComponents, interaction, ActionRow, SelectOption
from discord_components.component import ButtonStyle
from discord.colour import Color
from discord.embeds import Embed

from src.backend import handle as sData


def getMenuComponents(thisChannelID):
    editDelDisable = not sData.isExistId(thisChannelID)
    return [
        ActionRow(
            Button(
                label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id="addButton",
                style=ButtonStyle.green,
                emoji="‚ûï"),
            Button(
                label="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id="editButton",
                style=ButtonStyle.gray,
                emoji="üî®",
                disabled=editDelDisable),
            Button(
                label="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id="delButton",
                style=ButtonStyle.red,
                emoji="‚ùå",
                disabled=editDelDisable),
            Button(
                label="‡∏ß‡∏∏‡πâ‡∏Æ‡∏π‡πâ‡∏ß‡∏ß‡∏ß‡∏ß ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
                custom_id="toggleNoToday",
                style=ButtonStyle.gray,
                emoji="üéâ",
                disabled=True),
        ),
        ActionRow(
            Button(
                label="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
                custom_id="settingButton",
                style=ButtonStyle.gray,
                emoji="üîß",
                disabled=True),
            Button(
                label="‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î",
                custom_id="reloadButton",
                style=ButtonStyle.blue,
                emoji="üîÅ"),
            Button(
                label="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô",
                custom_id="checkVersion",
                style=ButtonStyle.gray,
                emoji="‚è´",
                disabled=True),
            Button(
                label="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà",
                custom_id="FreloadButton",
                style=ButtonStyle.red,
                emoji="‚ö†"),
        ),
        ActionRow(
            Button(
                label="‡∏•‡∏ö‡πÅ‡∏ä‡∏•‡πÄ‡∏ô‡∏•‡∏ô‡∏µ‡πâ(‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!!!)",
                custom_id="deleteChanButton",
                style=ButtonStyle.red,
                emoji="üí•"),
            Button(
                label="‡∏ô‡πà ‡∏≤ ‡∏™ ‡∏ô ‡πÉ ‡∏à",
                style=ButtonStyle.URL,
                url="https://www.youtube.com/watch?v=iik25wqIuFo",
                emoji="‚ùî"),
        )

    ]


def getEmbedAllTimeFromSubject(thisChannelID, subject, des=None):

    if not des:
        des = sData.getDesFromSubject(thisChannelID, subject)

    thisEm = Embed(
        title=subject, description=des, colour=Color.random())
    timeDatas = sData.getTimesfromSubject(thisChannelID, subject)
    for t in timeDatas:
        thisEm.add_field(name=t[0], value=t[1], inline=True)

    return thisEm


def anyButton(customId, llabel, eemoji=""):
    return Button(
        label=llabel,
        custom_id=customId,
        style=ButtonStyle.gray,
        emoji=eemoji)


def acceptButton(customId):
    return Button(
        label="‡∏ï‡∏Å‡∏•‡∏á",
        custom_id=customId,
        style=ButtonStyle.green,
        emoji="‚úÖ")


def backToMenu(pKey):
    return Button(
        label="‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π",
        custom_id=pKey + "backToMenu",
        style=ButtonStyle.gray,
        emoji="‚Ü©")


def makeSelectSubject(thisChannelID, customId, makeNewSubject):
    subOption = []
    subjects = sData.getallSubjects(thisChannelID)
    for s in subjects:
        subOption.append(SelectOption(label=s, value=s))
    if makeNewSubject:
        subOption.append(SelectOption(label="+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà",
                                      value="!!TheNewOneeeeeeeeeeeeeee!!",
                                      emoji="‚ûï"))
    return Select(
        placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤",
        options=subOption,
        custom_id=customId
    )


def fromTerzTimeToStr(timeTerz):
    return f"{timeTerz[0]} ‡πÄ‡∏ß‡∏•‡∏≤ {timeTerz[1]}"
