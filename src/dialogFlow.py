from discord.colour import Color
from discord.embeds import Embed
from discord_components import Select, Button, DiscordComponents, interaction, ActionRow, SelectOption
from discord_components.component import ButtonStyle

from src import discordData as dData
from src.backend import handle as sData
from src.backend import hashTime
from src import cmdUtil as util


def getMenuComponents():
    return [
        ActionRow(
            Button(
                label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id="addButton",
                style=ButtonStyle.green,
                emoji="‚ûï"),
            Button(
                label="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id="editButton",
                style=ButtonStyle.gray,
                emoji="üî®",
                disabled=True),
            Button(
                label="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id="delButton",
                style=ButtonStyle.red,
                emoji="‚ùå",
                disabled=True),
            Button(
                label="‡∏ß‡∏∏‡πâ‡∏Æ‡∏π‡πâ‡∏ß‡∏ß‡∏ß‡∏ß ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
                custom_id="toggleNoToday",
                style=ButtonStyle.gray,
                emoji="üéâ",
                disabled=True),
        ),
        ActionRow(
            Button(
                label="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
                custom_id="settingButton",
                style=ButtonStyle.gray,
                emoji="üîß",
                disabled=True),
            Button(
                label="‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î",
                custom_id="reloadButton",
                style=ButtonStyle.blue,
                emoji="üîÅ"),
            Button(
                label="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô",
                custom_id="checkVersion",
                style=ButtonStyle.gray,
                emoji="‚è´",
                disabled=True),
            Button(
                label="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà",
                custom_id="FreloadButton",
                style=ButtonStyle.red,
                emoji="‚ö†"),
        ),
        ActionRow(
            Button(
                label="‡∏•‡∏ö‡πÅ‡∏ä‡∏•‡πÄ‡∏ô‡∏•‡∏ô‡∏µ‡πâ(‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!!!)",
                custom_id="deleteChanButton",
                style=ButtonStyle.red,
                emoji="üí•"),
            Button(
                label="‡∏ô‡πà ‡∏≤ ‡∏™ ‡∏ô ‡πÉ ‡∏à",
                style=ButtonStyle.URL,
                url="https://www.youtube.com/watch?v=iik25wqIuFo",
                emoji="‚ùî"),
        )

    ]


async def getMessage(bot, chaID, messID):
    try:
        cha = await bot.fetch_channel(chaID)
    except:
        return None

    try:
        mess = await cha.fetch_message(messID)
    except:
        return None

    return mess


async def doDeleteLastCMDMessage(bot, thisChannelID):
    try:
        lastMessage = await getMessage(bot, thisChannelID, dData.getMessID(thisChannelID))
        await lastMessage.delete()
    except:
        pass


async def menuCmdCommand(chan):
    return await chan.send(":clock1:**‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ö‡∏≠‡∏ó‡∏Ç‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå(‡∏´‡πâ‡∏≠‡∏á)‡πÄ‡∏£‡∏µ‡∏¢‡∏ô**:clock1:\n \\* ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ\n*‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ : ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥*",
                           components=getMenuComponents())


async def callFlow(idFlow, bot, thisChannelID, dlcc=None):
    thisChannel = bot.get_channel(thisChannelID)
    if idFlow == "callSchedule":
        thisMes = await menuCmdCommand(thisChannel)
        if dData.isExistID(thisChannelID):
            await doDeleteLastCMDMessage(bot, thisChannelID)
            dData.setMessID(thisChannelID, thisMes.id)
        else:
            dData.createNewID(thisChannelID, thisMes.id)
    elif idFlow == "deleteChan":
        if dData.isExistID(thisChannelID):
            await doDeleteLastCMDMessage(bot, thisChannelID)
            dData.removeID(thisChannelID)
            await thisChannel.send(":boom:**‡∏•‡∏ö‡πÅ‡∏ä‡∏•‡πÄ‡∏ô‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢**:boom:\n‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á *(‡∏ã‡∏∂‡∏°...)*")
        else:
            await thisChannel.send("‡πÄ ‡∏õ‡πá ‡∏ô ‡πÑ ‡∏õ ‡πÑ ‡∏°‡πà ‡πÑ ‡∏î‡πâ")
    elif idFlow == "justReload":
        await doDeleteLastCMDMessage(bot, thisChannelID)
        thisMes = await menuCmdCommand(thisChannel)
        dData.setMessID(thisChannelID, thisMes.id)
    elif idFlow == "forceReload":
        await thisChannel.send("-"*50)
        dData.setState(thisChannelID, "idle")
        dData.setTemp(thisChannelID, [])
        await thisChannel.send("üîÅ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πàüîÅ")
        await doDeleteLastCMDMessage(bot, thisChannelID)
        thisMes = await menuCmdCommand(thisChannel)
        dData.setMessID(thisChannelID, thisMes.id)
    elif idFlow == "backToIdle":
        dData.setState(thisChannelID, "idle")
        dData.setTemp(thisChannelID, [])
        pKey = util.genRandomKey()
        dData.setStateKey(thisChannelID, pKey)
        await doDeleteLastCMDMessage(bot, thisChannelID)
        thisMes = await menuCmdCommand(thisChannel)
        dData.setMessID(thisChannelID, thisMes.id)

    # ? ADDD

    elif idFlow == "Add_SelSub":
        dData.setState(thisChannelID, "Add_SelSub")
        pKey = util.genRandomKey()
        dData.setStateKey(thisChannelID, pKey)
        pKey += ":"
        subjects = sData.getallSubjects(thisChannelID)
        subOption = []
        for s in subjects:
            subOption.append(SelectOption(label=s, value=s))
        subOption.append(SelectOption(label="+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà",
                         value="!!TheNewOneeeeeeeeeeeeeee!!",
                         emoji="‚ûï"))
        await thisChannel.send("**+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ / ‡πÄ‡∏ß‡∏•‡∏≤ +**\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏ä‡∏≤",
                               components=[
                                   Select(
                                       placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤",
                                       options=subOption,
                                       custom_id=pKey+"add_SelectSubject"
                                   )
                               ])
    elif idFlow == "Add_Sub":
        dData.setState(thisChannelID, "Add_Sub")
        await thisChannel.send(":speech_balloon:‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 20 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)\n*‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢*")

    elif idFlow == "Add_Sub2":
        dData.setState(thisChannelID, "Add_Sub2")
        await thisChannel.send(":speech_balloon:‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 20 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)\n*‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢*")

    elif idFlow == "Add_Link" or idFlow == "Add_LinkBP":
        # * Use dlc as curSubject
        if idFlow == "Add_Link":
            curSubject = dlcc
            dData.setTempInd(thisChannelID, 0, curSubject)
        else:
            curSubject = dData.getTemp(thisChannelID)[0]

        dData.setState(thisChannelID, "Add_Link")
        await thisChannel.send(
            f":closed_book: **‡∏ß‡∏¥‡∏ä‡∏≤ `{curSubject}`**\n:speech_balloon: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏¢\n*‡∏Ç‡∏≠‡πÅ‡∏Ñ‡πà‡∏•‡∏¥‡πâ‡∏á‡∏Å‡πá‡∏û‡∏≠*")

    elif idFlow == "Add_SubCon" or idFlow == "Add_SubConBP":
        if idFlow == "Add_SubCon":
            # * Use dlc as curLink
            curLink = dlcc
            dData.setTempInd(thisChannelID, 1, curLink)
            newTemp = dData.getTemp(thisChannelID)
        else:
            # * Use dlc as curSubject
            curSubject = dlcc
            newTemp = dData.getTemp(thisChannelID)
            newTemp[0] = curSubject
            dData.setTemp(thisChannelID, newTemp)
        pKey = dData.getStateKey(thisChannelID) + ":"
        dData.setState(thisChannelID, "Add_SubCon")

        menus = ActionRow(
            Button(
                label="‡∏ï‡∏Å‡∏•‡∏á",
                custom_id=pKey+"add_sub_OK",
                style=ButtonStyle.green,
                emoji="‚úÖ"),
            Button(
                label="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤",
                custom_id=pKey+"add_sub_editSub",
                style=ButtonStyle.gray,
                emoji="üìï"),
            Button(
                label="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏•‡∏¥‡πâ‡∏á",
                custom_id=pKey+"add_sub_editLink",
                style=ButtonStyle.gray,
                emoji="üîó"),
        )
        try:
            await thisChannel.send(
                f"**‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à**\n‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ",
                embed=Embed(
                    title=newTemp[0],
                    description=newTemp[1], colour=Color.random()),
                components=[ActionRow(
                    Button(
                        label="‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
                        style=ButtonStyle.URL,
                        url=newTemp[1],
                        emoji="üîó")
                ), menus])
        except:
            await thisChannel.send(
                f"**‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à**\n‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ",
                embed=Embed(
                    title=newTemp[0],
                    description=newTemp[1], colour=Color.random()),
                components=[menus])

    elif idFlow == "Add_AllTime":
        dData.setState(thisChannelID, "Add_AllTime")
        newTemp = dData.getTemp(thisChannelID)
        pKey = dData.getStateKey(thisChannelID) + ":"
        thisEm = Embed(
            title=newTemp[0], description=newTemp[1], colour=Color.random())
        timeDatas = sData.getTimesfromSubject(thisChannelID, newTemp[0])
        for t in timeDatas:
            print(t)
            thisEm.add_field(name=t, value="Ayaya", inline=True)
        await thisChannel.send(
            f"**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ß‡∏•‡∏≤...**",
            embed=thisEm,
            components=[ActionRow(
                Button(
                        label="‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                        custom_id=pKey+"add_time_OK",
                        style=ButtonStyle.green,
                        emoji="‚úÖ"),
                Button(
                    label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
                    custom_id=pKey+"add_time_add",
                    style=ButtonStyle.blue,
                    emoji="üïí"),
            )])

    elif idFlow == "Add_NewDay":
        dData.setState(thisChannelID, "Add_NewDay")
        pKey = dData.getStateKey(thisChannelID) + ":"
        await thisChannel.send(
            f":calendar_spiral:**‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô**:calendar_spiral:",
            components=[ActionRow(
                Button(
                        label="‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå",
                        custom_id=pKey+"add_NewDay_0",
                        style=ButtonStyle.gray),
                Button(
                    label="‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå",
                    custom_id=pKey+"add_NewDay_1",
                    style=ButtonStyle.gray),
                Button(
                    label="‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£",
                    custom_id=pKey+"add_NewDay_2",
                    style=ButtonStyle.gray)), ActionRow(
                Button(
                    label="‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò",
                    custom_id=pKey+"add_NewDay_3",
                    style=ButtonStyle.gray),
                Button(
                    label="‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ",
                    custom_id=pKey+"add_NewDay_4",
                    style=ButtonStyle.gray),
                Button(
                    label="‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå",
                    custom_id=pKey+"add_NewDay_5",
                    style=ButtonStyle.gray),
                Button(
                    label="‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå",
                    custom_id=pKey+"add_NewDay_6",
                    style=ButtonStyle.gray),
            )])

    elif idFlow == "Add_NewTime":
        dData.setTempInd(thisChannelID, 2, dlcc)
        ttemp = dData.getTemp(thisChannelID)
        dData.setState(thisChannelID, "Add_NewTime")
        dayInThai = ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£",
                     "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå"]

        await thisChannel.send(
            f":clock3:‡∏ß‡∏¥‡∏ä‡∏≤ {ttemp[0]} ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å ‡πÜ ‡∏ß‡∏±‡∏ô{dayInThai[dlcc]} ‡∏ï‡∏≠‡∏ô‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á??\n" +
            "* - ‡πÉ‡∏™‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ `xx:xx` ‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢*\n" +
            "* - ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 5-10 ‡∏ô‡∏≤‡∏ó‡∏µ...*\n" +
            "* - ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏∞‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢ 5 ‡∏•‡∏á‡∏ï‡∏±‡∏ß ‡πÄ‡∏ä‡πà‡∏ô 0:00 0:05 0:10 ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô*")

    elif idFlow == "Add_NewTimeCon":
        dData.setTempInd(thisChannelID, 3, dlcc[0]*12 + dlcc[1]//5)
        curTemp = dData.getTemp(thisChannelID)
        pKey = dData.getStateKey(thisChannelID) + ":"
        dData.setState(thisChannelID, "Add_NewTimeCon")

        newHash = curTemp[3] + curTemp[2] * 288

        menus = ActionRow(
            Button(
                label="‡∏ï‡∏Å‡∏•‡∏á",
                custom_id=pKey+"add_newTimeCon_OK",
                style=ButtonStyle.green,
                emoji="‚úÖ"),
            Button(
                label="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ß‡∏±‡∏ô/‡πÄ‡∏ß‡∏•‡∏≤",
                custom_id=pKey+"add_newTimeCon_edit",
                style=ButtonStyle.gray,
                emoji="üïô")
        )
        await thisChannel.send(
            f"‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏π‡∏Å‡πÑ‡∏´‡∏°????",
            embed=Embed(
                title=curTemp[0],
                description=hashTime.hashBack(newHash), colour=Color.random()),
            components=[menus])
